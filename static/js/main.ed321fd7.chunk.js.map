{"version":3,"sources":["components/AppName.jsx","components/TodoItem.jsx","components/TodoList.jsx","index.js"],"names":["AppName","react_default","a","createElement","className","Component","TodoItem","_this","this","type","name","id","props","data","checked","completed","onChange","handleChange","text","onClick","TodoList","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","isLoading","todos","todoText","bind","assertThisInitialized","handleSubmit","handleInputChange","_this2","setTimeout","setState","com","prevState","map","todo","deleted","event","value","target","length","updatedData","push","preventDefault","_this3","todoItems","filter","item","filtered","components_TodoItem","key","onSubmit","placeholder","App","AppName_AppName","components_TodoList","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.ed321fd7.chunk.js","sourcesContent":["import React, {Component} from 'react'\n\nexport default class AppName extends Component {\n    render() {\n        return <div className=\"appname noselect\">./todo_list</div>\n    }\n}\n","import React, {Component} from 'react'\n\nclass TodoItem extends Component {\n    render() {\n        let classNames = 'todo-item animated '\n        return (\n            <div className={classNames}>\n                <input\n                    type=\"checkbox\"\n                    className=\"form-checkbox \"\n                    name=\"checkbox\"\n                    id={this.props.data.id}\n                    checked={this.props.data.completed}\n                    onChange={() => {\n                        this.props.handleChange(this.props.data, 'complete')\n                    }}\n                />\n\n                <p className={this.props.data.completed ? 'completedTask' : ''}>\n                    {this.props.data.text}\n                </p>\n\n                <div\n                    name=\"delete\"\n                    className=\"remove-item noselect\"\n                    onClick={() => {\n                        this.props.handleChange(this.props.data, 'delete')\n                    }}\n                >\n                    &#10005;\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default TodoItem\n","import React, { Component } from 'react'\nimport TodoItem from './TodoItem.jsx'\nimport todosData from '../todosData'\n\nclass TodoList extends Component {\n  constructor() {\n    super()\n    this.state = {\n      isLoading: true,\n      todos: [],\n      todoText: ''\n    }\n\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSubmit = this.handleSubmit.bind(this)\n    this.handleInputChange = this.handleInputChange.bind(this)\n  }\n\n  componentDidMount () {\n    setTimeout(() => {\n      this.setState({\n        isLoading: false\n      })\n    }, 500)\n\n    // this.setState({isLoading: false})\n  }\n\n  handleChange (data, com) {\n    this.setState(prevState => {\n      const updatedData = prevState.todos.map(todo => {\n        if (todo.id === data.id) {\n          if (com === 'complete') todo.completed = !todo.completed\n          else if (com === 'delete') {\n            todo.deleted = true\n          }\n        }\n        return todo\n      })\n\n      return {\n        todos: updatedData\n      }\n    })\n  }\n\n  handleInputChange (event) {\n    const { value } = event.target\n    this.setState({\n      todoText: value\n    })\n  }\n\n  handleSubmit (event) {\n    const { todoText } = this.state\n    let id = this.state.todos.length === 0 ? 0 : this.state.todos[this.state.todos.length - 1].id\n    id++\n\n    this.setState(prevState => {\n      let updatedData = prevState.todos\n      if (todoText !== '')\n        updatedData.push({\n          id: id,\n          text: todoText,\n          completed: false,\n          deleted: false\n        })\n\n      return {\n        todos: updatedData,\n        todoText: ''\n      }\n    })\n    event.preventDefault()\n  }\n\n  render () {\n    const todoItems = this.state.todos\n      .filter(item => {\n        return !item.deleted\n      })\n      .map(filtered => (\n        <TodoItem\n          key={filtered.id}\n          data={filtered}\n          handleChange={this.handleChange}\n        />\n      ))\n\n    return (\n      <div className=\"todo-list\">\n        <form className=\"new-item\" onSubmit={this.handleSubmit}>\n          <input\n            value={this.state.todoText}\n            name=\"newtodo\"\n            type=\"text\"\n            className=\"todo-input \"\n            placeholder=\"What needs to be done\"\n            onChange={this.handleInputChange}\n          />\n          <button />\n        </form>\n\n        {this.state.isLoading ? <h1>Loading...</h1> : todoItems}\n      </div>\n    )\n  }\n}\n\nexport default TodoList","import React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport './styles/main.scss'\nimport AppName from './components/AppName'\nimport ToDoList from './components/TodoList'\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"container \">\n                <AppName />\n                <ToDoList />\n            </div>\n        )\n    }\n}\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}